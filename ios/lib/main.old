import 'package:flutter/material.dart';
import 'dart:async';
import 'dart:math';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Log Book',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: LogBookScreen(),
    );
  }
}

class LogBookScreen extends StatefulWidget {
  @override
  _LogBookScreenState createState() => _LogBookScreenState();
}

class _LogBookScreenState extends State<LogBookScreen> {
  List<String> logEntries = []; // List to store log entries
  late Timer _timer; // Timer to add new entries

  @override
  void initState() {
    super.initState();
    // Start a timer that adds a new log entry every 5 seconds
    _timer = Timer.periodic(Duration(seconds: 5), (timer) {
      setState(() {
        logEntries.add(_generateRandomText()); // Append random text to the list
      });
    });
  }

  @override
  void dispose() {
    _timer.cancel(); // Cancel the timer when the widget is disposed
    super.dispose();
  }

  // Function to generate random text
  String _generateRandomText() {
    final random = Random();
    const words = [
      'Event A',
      'Event B',
      'Event C',
      'Event D',
      'Event E',
      'Event F',
    ];
    return words[random.nextInt(words.length)]; // Pick a random word
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Log Book'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Log Entries:',
              style: TextStyle(fontSize: 10, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 20),
            Expanded(
              child: ListView.builder(
                itemCount: logEntries.length,
                itemBuilder: (context, index) {
               return ListTile(
  title: Text(
    logEntries[index],
    style: TextStyle(
      fontFamily: 'Roboto', // Use the custom font
      fontSize: 16,
      fontWeight: FontWeight.normal,
    ),
  ),
);
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
